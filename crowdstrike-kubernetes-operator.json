{
    "typeName": "CrowdStrike::Kubernetes::Operator",
    "description": "An example resource schema demonstrating some basic constructs and validation rules.",
    "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
    "properties": {
        "ClusterName": {
            "description": "Name of the EKS cluster",
            "type": "string"
        },
        "CfnId": {
            "type":"string",
            "description": "CloudFormation Physical ID."
        }
    },
    "additionalProperties": false,
    "required": [
        "ClusterName"
    ],
    "readOnlyProperties": [
        "/properties/CfnId"
    ],
    "createOnlyProperties": [
        "/properties/ClusterName"
    ],
    "primaryIdentifier": [
        "/properties/ClusterName"
    ],
    "handlers": {
        "create": {
            "permissions": [
                "ssm:GetParameter",
                "eks:DescribeCluster",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeVpcs",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "sts:GetCallerIdentity",
                "s3:GetObject",
                "lambda:CreateFunction",
                "lambda:UpdateFunctionConfiguration",
                "lambda:UpdateFunctionCode",
                "lambda:InvokeFunction",
                "iam:PassRole"
            ]
        },
        "read": {
            "permissions": [
                "ssm:GetParameter",
                "eks:DescribeCluster",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeVpcs",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "sts:GetCallerIdentity",
                "s3:GetObject",
                "lambda:CreateFunction",
                "lambda:UpdateFunctionConfiguration",
                "lambda:UpdateFunctionCode",
                "lambda:InvokeFunction",
                "iam:PassRole"
            ]
        },
        "update": {
            "permissions": [
                "ssm:GetParameter",
                "eks:DescribeCluster",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeVpcs",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "sts:GetCallerIdentity",
                "s3:GetObject",
                "lambda:CreateFunction",
                "lambda:UpdateFunctionConfiguration",
                "lambda:UpdateFunctionCode",
                "lambda:InvokeFunction",
                "iam:PassRole"
            ]
        },
        "delete": {
            "permissions": [
                "ssm:GetParameter",
                "eks:DescribeCluster",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeVpcs",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "sts:GetCallerIdentity",
                "s3:GetObject",
                "lambda:CreateFunction",
                "lambda:UpdateFunctionConfiguration",
                "lambda:UpdateFunctionCode",
                "lambda:InvokeFunction",
                "iam:PassRole"
            ]
        },
        "list": {
            "permissions": [
                "ssm:GetParameter",
                "eks:DescribeCluster",
                "ec2:DescribeSubnets",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeVpcs",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "sts:GetCallerIdentity",
                "s3:GetObject",
                "lambda:CreateFunction",
                "lambda:UpdateFunctionConfiguration",
                "lambda:UpdateFunctionCode",
                "lambda:InvokeFunction",
                "iam:PassRole"
            ]
        }
    }
}
